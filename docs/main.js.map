{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/movie.service.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Movie';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './search/search.component';\nimport { ListComponent } from './list/list.component';\nimport { DetailsComponent } from './details/details.component';\n\n// imported manually\n import { RouterModule } from '@angular/router';\n import { HttpClientModule } from '@angular/common/http';\n import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MovieService } from './movie.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    ListComponent,\n    DetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'search', component: SearchComponent},\n      { path: '', redirectTo: '/search', pathMatch: 'full'},\n      { path: '*', component: SearchComponent},\n      { path: '**', component: SearchComponent}\n    ])\n  ],\n  providers: [MovieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-6\\\" *ngIf=\\\"movie\\\">\\n    <h1 class=\\\"display-4\\\">{{movie.Title}}</h1>\\n    <p class=\\\"lead\\\">{{movie.Year}}</p>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MovieService } from '../movie.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  moviePoster: string;\n  movieFound: boolean;\n  message: string;\n  @Input() movie: any;\n  constructor(public http: MovieService) {\n    console.log('details...');\n    http.apiData$.subscribe(data => this.movie = data);\n    console.log(this.movie);\n  }\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"movies\\\">\\n    <div class=\\\"col-4\\\">\\n        <div *ngFor=\\\"let movie of movies\\\">\\n            <ul class=\\\"list-group\\\">\\n                <button class=\\\"list-group-item\\\" (click)=\\\"myClickFunction(movie)\\\">{{movie.Title}}</button>\\n            </ul>\\n        </div>\\n    </div>\\n    <app-details [movie]=\\\"selectedMovie\\\"></app-details>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MovieService } from '../movie.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  @Input() movies: any;\n  selectedMovie: any;\n  constructor(public http: MovieService) { }\n\n  ngOnInit() {\n    this.selectedMovie = this.movies[0];\n  }\n\n  myClickFunction(movie) {\n    console.log(movie);\n    this.selectedMovie = movie;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private apiData = new BehaviorSubject<Object>(null);\n  public apiData$ = this.apiData.asObservable();\n\n  constructor(public http: HttpClient) {\n    console.log('Service constructor...');\n  }\n  public apiKey = '3fcf6962';\n\n  public url = `https://www.omdbapi.com/?s=`;\n\n  public getMovie(movieName: String): Observable<any> {\n    return this.http.get(`${this.url}${movieName}&apiKey=${this.apiKey}`);\n    }\n    setData(data) {\n      this.apiData.next(data);\n    }\n  }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- For search bar -->\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"input-group mb-3\\\">\\n        <input #searchBox [formControl]=\\\"searchField\\\" type=\\\"search\\\" autofocus=\\\"true\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Search Movies Here....\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"searchMovies(searchBox.value)\\\" type=\\\"submit\\\"\\n            id=\\\"button-addon2\\\">Search</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- For body section -->\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <!-- For listing movies-->\\n            <div *ngIf=\\\"showList\\\">\\n              <app-list [movies]=\\\"movieList\\\"></app-list>\\n            </div>\\n          </div>\\n    </div>\\n    \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MovieService } from '../movie.service';\nimport { FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  searchField: FormControl = new FormControl();\n  data: any;\n  movie: any;\n  moviePoster: string;\n  movieFound: boolean;\n  message: string;\n  showList: boolean;\n  movieList: any;\n  constructor(public http: MovieService) {\n    console.log('Search Component');\n  }\n\n  ngOnInit() {\n  }\n\n  // searchMovies(movieName: String): void {\n  //   this.http.getMovie(movieName).subscribe(data => {\n  //     this.data = data;\n  //     this.http.setData(data);\n  //   });\n  // },\n  searchMovies(movieName: String): void {\n    this.http.getMovie(movieName).subscribe( data => {\n     if (data.Response === 'True') {\n      this.movie = data;\n      this.movieList = data.Search;\n      console.log(this.movieList);\n      this.showList = true;\n      if (this.movie.Poster !== 'N/A') {\n        this.moviePoster = this.movie.Poster;\n      } else {\n        this.moviePoster = '';\n      }\n      this.movieFound = true;\n    } else {\n      this.movieFound = false;\n      this.message = 'No movie was found that matched your search.';\n    }\n     }\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}